name: PR

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  deploys:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    outputs:
      backend: ${{ steps.trigger.outputs.backend }}
      database: ${{ steps.trigger.outputs.database }}
      frontend: ${{ steps.trigger.outputs.frontend }}
    strategy:
      matrix:
        name: [ backend, database, frontend ]
        include:
          - name: backend
            file: templates/backend.yml
            overwrite: true
          - name: database
            file: templates/database.yml
            overwrite: false
          - name: frontend
            file: templates/frontend.yml
            oc_version: 4.13
            overwrite: true
    steps:
      - uses: actions/checkout@v4
      - id: deploys
        uses: ./
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: ${{ matrix.oc_version }}
          overwrite: ${{ matrix.overwrite }}
          parameters: -p ZONE=${{ github.event.number }} ${{ matrix.parameters }}
      - id: trigger
        run: echo "${{ matrix.name }}=${{ steps.deploys.outputs.triggered }}" >> $GITHUB_OUTPUT

  results:
    name: Results
    runs-on: ubuntu-24.04
    needs: [deploys]
    steps:
      - run: |
          # Validate outputs
          if [[ -z "${{ needs.deploys.outputs.database }}" || -z "${{ needs.deploys.outputs.backend }}" || -z "${{ needs.deploys.outputs.frontend }}" ]]; then
            echo "Error: One or more outputs are empty."
            exit 1
          fi

          # Ensure outputs are true or false
          for output in database backend frontend; do
            value="${{ needs.deploys.outputs[$output] }}"
            if [[ "$value" != "true" && "$value" != "false" ]]; then
              echo "Error: Output $output is not true or false. Value: $value"
              exit 1
            i
          done

          # Expand for outputs
          echo "Results: ${{ toJson(needs.deploys.outputs) }}"
          echo "Database triggered: ${{ needs.deploys.outputs.database }}"
          echo "Backend triggered: ${{ needs.deploys.outputs.backend }}"
          echo "Frontend triggered: ${{ needs.deploys.outputs.frontend }}"
